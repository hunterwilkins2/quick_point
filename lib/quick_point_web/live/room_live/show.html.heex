<.header>
  {@room.name}
  <:actions>
    <.back navigate={~p"/rooms"}>Back to rooms</.back>
  </:actions>
</.header>

<div class="grid grid-cols-[8fr_4fr] gap-16 mt-8">
  <div>
    <h1 class="min-h-7 w-full text-center text-xl mb-4">
      {if @active_ticket do
        @active_ticket.name
      else
        ""
      end}
    </h1>

    <.cards
      cards={~W"1 2 3 5 8 13 21 34 55"}
      vote={@vote}
      can_vote={@game_state == :voting or @game_state == :show_results}
    />

    <.ticket_selector
      room={@room}
      ticket_filter={@ticket_filter}
      active_tickets={@total_tickets_not_started}
      completed_tickets={@total_tickets_completed}
      total_tickets={@total_tickets}
      is_moderator={@is_moderator}
    />

    <.table id="tickets" rows={@streams.tickets}>
      <:col :let={{_id, ticket}} label="Name">{ticket.name}</:col>
      <:col :let={{_id, ticket}} label="Description">{ticket.description}</:col>
      <:col :let={{_id, ticket}} :if={@ticket_filter != "not_started"} label="Effort">
        {ticket.effort}
      </:col>

      <:action :let={{_id, ticket}} :if={@is_moderator}>
        <.link patch={~p"/rooms/#{@room}/tickets/#{ticket}/edit"}>Edit</.link>
      </:action>
      <:action :let={{id, ticket}} :if={@is_moderator}>
        <.link
          phx-click={JS.push("delete", value: %{id: ticket.id}) |> hide("##{id}")}
          data-restore={show("##{id}")}
          data-confirm="Are you sure?"
        >
          Delete
        </.link>
      </:action>
    </.table>
    <.button
      :if={@is_moderator}
      phx-click={JS.push("delete-all")}
      data-confirm="Are you sure?"
      class="float-end"
    >
      Delete All
    </.button>
  </div>

  <div class="mt-11 bg-neutral-200 h-min rounded-md shadow-md 
    [&>*]:p-4 [&>*:not(:last-child)]:border-b [&>*:not(:last-child)]:border-stone-300">
    <p class="text-center font-semibold text-lg bg-blue-500 text-white rounded-t-md">
      {case @game_state do
        :game_over ->
          "Add tickets to get started"

        :waiting_to_start ->
          "Ready to start voting"

        :voting ->
          "Waiting on #{@total_users - @total_votes} players"

        :show_results ->
          "Finished voting"
      end}
    </p>
    <div
      :if={@is_moderator and @game_state != :game_over}
      class={["grid grid-cols-2 gap-4", @game_state == :waiting_to_start && "!grid-cols-1"]}
    >
      <.button
        :if={@game_state != :waiting_to_start}
        phx-click="clear-votes"
        class={[
          "!bg-transparent !text-blue-500 outline outline-1 outline-blue-500 rounded-md",
          "hover:outline-2 hover:outline-blue-600 hover:bg-transparent",
          @game_state == :show_results && "col-span-2"
        ]}
      >
        Clear Votes
      </.button>
      <.button
        :if={@game_state != :waiting_to_start and @game_state != :show_results}
        phx-click="end-voting"
        class="!bg-transparent !text-blue-500 outline outline-1 outline-blue-500 rounded-md 
        hover:outline-2 hover:outline-blue-600 hover:bg-transparent
      "
      >
        End Voting
      </.button>
      <.button
        :if={@game_state != :waiting_to_start}
        phx-click="skip-ticket"
        class={[
          "!bg-transparent !text-blue-500 outline outline-1 outline-blue-500 rounded-md",
          "hover:outline-2 hover:outline-blue-600 hover:bg-transparent",
          @game_state == :voting && "col-span-2"
        ]}
      >
        Skip Ticket
      </.button>
      <.button
        :if={@game_state != :voting}
        phx-click="next-ticket"
        class="!bg-transparent !text-blue-500 outline outline-1 outline-blue-500 rounded-md
        hover:outline-2 hover:outline-blue-600 hover:bg-transparent
      "
      >
        Next Ticket
      </.button>
    </div>
    <div class="flex justify-between items-center">
      <p class="text-2xl">Players:</p>
      <p class="text-xl">{@total_votes} / {@total_users}</p>
    </div>
    <ul
      id="online_users"
      phx-update="stream"
      class="!p-0 border-none 
      [&>*]:p-4 [&>*]:border-b [&>*]:border-stone-300
    "
    >
      <li
        :for={
          {dom_id, %{user: %{name: name}, vote: vote}} <-
            @streams.users
        }
        id={dom_id}
        class="w-full flex items-center [&>.user-icon]:hover:hidden [&>.cog-icon]:hover:block"
      >
        <button
          popovertarget="role-form"
          class="w-8 h-8 bg-slate-300 rounded-full mr-4 relative cursor-pointer [&>.user-icon]:hover:hidden [&>.cog-icon]:hover:block"
        >
          <Heroicons.icon
            name="user"
            type="solid"
            class="user-icon absolute h-3/4 w-3/4 fill-current stroke-none top-1 left-1"
          />
          <Heroicons.icon
            name="cog-6-tooth"
            type="outline"
            class="cog-icon hidden absolute h-3/4 w-3/4 top-1 left-1"
          />
        </button>
        <p>{name}</p>
        <Heroicons.icon
          :if={vote}
          name="check-circle"
          type="outline"
          class="text-blue-500 ml-1 h-5 w-5"
        />
        <p :if={@game_state == :show_results} class="ml-auto font-semibold">{vote}</p>
      </li>
    </ul>
    <details>
      <summary>Invite a teammate</summary>
      <input
        id="share-link"
        type="text"
        value={"#{Application.fetch_env!(:quick_point, :host_url)}/rooms/#{@room.id}"}
        readonly
      />
    </details>
  </div>
</div>

<.modal
  :if={@live_action in [:new_ticket, :edit_ticket] and @is_moderator}
  id="ticket-modal"
  show
  on_cancel={JS.patch(~p"/rooms/#{@room}")}
>
  <.live_component
    module={QuickPointWeb.TicketLive.FormComponent}
    id={@ticket.id || :new}
    title={@page_title}
    action={@live_action}
    ticket={@ticket}
    room={@room}
    current_user={@current_user}
    patch={~p"/rooms/#{@room}"}
  />
</.modal>
